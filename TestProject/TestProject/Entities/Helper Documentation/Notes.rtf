{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red0\green0\blue0;\red65\green204\blue69;
\red211\green24\blue149;\red65\green161\blue192;\red0\green160\blue255;\red35\green255\blue131;\red255\green44\blue56;
\red120\green109\blue255;}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0;\csgenericrgb\c25500\c80100\c27000;
\csgenericrgb\c82800\c9500\c58300;\csgenericrgb\c25490\c63137\c75294;\csgenericrgb\c0\c62600\c100000;\csgenericrgb\c13700\c100000\c51200;\csgenericrgb\c100000\c17100\c21900;
\csgenericrgb\c46900\c42600\c100000;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 NOTES:\
\
\
\
\
CHECK LATER\
1) Deinits\
2) Useless Protocols and Data Members - In Progress\
3) Make a DB Reset Function and Testing Views\
4) DevTesting and Unit Tests to Make sure classes work properly\
\
\
\
\
IMPROVEMENTS\
\
\
\
QUERIES\
\
\
Closure Pattern\
\pard\tx272\pardeftab272\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3   \cf4 //Testing Here\cf2 \
  \
  \cf5 var\cf2  \cf6 array\cf2 :[\cf7 Int\cf2 ]\
  \cf5 let\cf2  \cf6 view\cf2 :\cf8 ProtocolPresenterToViewPopulateMenu\cf2 \
  \
  \cf5 func\cf2  \cf6 presenter\cf2 ()\
  \{\
    \cf8 interactor\cf2  \{\
      \cf8 view\cf2 ?.\cf8 showActivity\cf2 ()\
    \}\
  \}\
  \
  \cf5 func\cf2  \cf6 interactor\cf2 (\cf6 completion\cf2 : \cf5 @escaping\cf2  (() -> \cf7 Void\cf2 ))\
  \{\
    \cf8 repository\cf2  \{result \cf5 in\cf2 \
      \cf5 self\cf2 .\cf8 array\cf2  = result\
    \}\
  \}\
  \
  \cf5 func\cf2  \cf6 repository\cf2 (\cf6 completion\cf2 : \cf5 @escaping\cf2  (([\cf7 Int\cf2 ]) -> \cf7 Void\cf2 ))\
  \{\
    \cf8 dataSource\cf2 ()\{ result \cf5 in\cf2 \
     \
      \cf8 LoggingSystemFlow\cf2 .\cf8 printLog\cf2 (\cf9 "In \cf2 \\(\cf5 #function\cf2 )\cf9 "\cf2 )\
      \cf8 LoggingSystemFlow\cf2 .\cf8 printLog\cf2 (\cf9 "Got the result"\cf2 )\
      \cf5 for\cf2  i \cf5 in\cf2  result\
      \{\
        \cf8 LoggingSystemFlow\cf2 .\cf8 printLog\cf2 (i)\
      \}\
      completion(result)\
    \}\
  \}\
  \
  \cf5 func\cf2  \cf6 dataSource\cf2 (\cf6 completion\cf2 : \cf5 @escaping\cf2  (([\cf7 Int\cf2 ]) -> \cf7 Void\cf2 ))\
  \{\
    \
    \cf8 LoggingSystemFlow\cf2 .\cf8 printLog\cf2 (\cf9 "I am in \cf2 \\(\cf5 #function\cf2 )\cf9 "\cf2 )\
    \cf8 LoggingSystemFlow\cf2 .\cf8 printLog\cf2 (\cf9 "I will send back a [Int]?"\cf2 )\
    \
    \cf5 var\cf2  listArray = [\cf7 Int\cf2 ]()\
    \
    \cf5 for\cf2  i \cf5 in\cf2  \cf10 0\cf2 ...\cf10 3\cf2 \
    \{\
      listArray.\cf7 append\cf2 (i)\
    \}\
    completion(listArray)\
  \}\
  \
  \cf4 //END TESTING
\f0\fs24 \cf0 \cb1 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
INITIALIZING DB CODE\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f1\fs22 \cf5 \cb3 let\cf2  myDay = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        myDay.\cf8 listKey\cf2  = \cf10 0\cf2 \
        myDay.\cf8 name\cf2  = \cf9 "My Day"\cf2 \
        myDay.\cf8 isPermanent\cf2  = \cf5 true\cf2 \
        \
        \cf5 let\cf2  myDayItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        myDayItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 0\cf2 \
        myDayItem[\cf10 0\cf2 ].text = \cf9 "Pack Lunch"\cf2 \
        myDayItem[\cf10 0\cf2 ].done = \cf5 true\cf2 \
        \
        myDayItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 1\cf2 \
        myDayItem[\cf10 1\cf2 ].text = \cf9 "Refuel Car"\cf2 \
        myDayItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        myDay.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : myDayItem)\
        \
        \cf5 let\cf2  important = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        important.\cf8 listKey\cf2  = \cf10 1\cf2 \
        important.\cf8 name\cf2  = \cf9 "Important"\cf2 \
        important.\cf8 isPermanent\cf2  = \cf5 true\cf2 \
        \
        \cf5 let\cf2  importantItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        importantItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 2\cf2 \
        importantItem[\cf10 0\cf2 ].text = \cf9 "Visit Dentist"\cf2 \
        importantItem[\cf10 0\cf2 ].done = \cf5 false\cf2 \
        \
        importantItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 3\cf2 \
        importantItem[\cf10 1\cf2 ].text = \cf9 "Bank Verification"\cf2 \
        importantItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        importantItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 4\cf2 \
        importantItem[\cf10 1\cf2 ].text = \cf9 "Bank Verification"\cf2 \
        importantItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        important.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : importantItem)\
        \
        \cf5 let\cf2  planned = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        planned.\cf8 listKey\cf2  = \cf10 2\cf2 \
        planned.\cf8 name\cf2  = \cf9 "Planned"\cf2 \
        planned.\cf8 isPermanent\cf2  = \cf5 true\cf2 \
        \
        \cf5 let\cf2  plannedItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        plannedItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 5\cf2 \
        plannedItem[\cf10 0\cf2 ].text = \cf9 "Trip Logistics"\cf2 \
        plannedItem[\cf10 0\cf2 ].done = \cf5 false\cf2 \
        \
        plannedItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 6\cf2 \
        plannedItem[\cf10 1\cf2 ].text = \cf9 "Garden Revamping"\cf2 \
        plannedItem[\cf10 1\cf2 ].done = \cf5 true\cf2 \
        \
        plannedItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 7\cf2 \
        plannedItem[\cf10 1\cf2 ].text = \cf9 "Office Party"\cf2 \
        plannedItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        planned.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : plannedItem)\
        \
        \cf5 let\cf2  assigned = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        assigned.\cf8 listKey\cf2  = \cf10 3\cf2 \
        assigned.\cf8 name\cf2  = \cf9 "Assigned to me"\cf2 \
        assigned.\cf8 isPermanent\cf2  = \cf5 true\cf2 \
        \
        \cf5 let\cf2  assignedItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        assignedItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 8\cf2 \
        assignedItem[\cf10 0\cf2 ].text = \cf9 "Project - Phase 1"\cf2 \
        assignedItem[\cf10 0\cf2 ].done = \cf5 true\cf2 \
        \
        assignedItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 9\cf2 \
        assignedItem[\cf10 1\cf2 ].text = \cf9 "Project - Testing Phase"\cf2 \
        assignedItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        assigned.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : assignedItem)\
        \
        \cf5 let\cf2  tasks = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        tasks.\cf8 listKey\cf2  = \cf10 4\cf2 \
        tasks.\cf8 name\cf2  = \cf9 "Tasks"\cf2 \
        tasks.\cf8 isPermanent\cf2  = \cf5 true\cf2 \
        \
        \cf5 let\cf2  tasksItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        tasksItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 10\cf2 \
        tasksItem[\cf10 0\cf2 ].text = \cf9 "Submission A3"\cf2 \
        tasksItem[\cf10 0\cf2 ].done = \cf5 true\cf2 \
    \
        tasksItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 11\cf2 \
        tasksItem[\cf10 1\cf2 ].text = \cf9 "Submission HW2"\cf2 \
        tasksItem[\cf10 1\cf2 ].done = \cf5 true\cf2 \
        \
        tasksItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 12\cf2 \
        tasksItem[\cf10 1\cf2 ].text = \cf9 "Submission Q2"\cf2 \
        tasksItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        tasks.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : tasksItem)\
        \
        \cf5 let\cf2  travel = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        travel.\cf8 listKey\cf2  = \cf10 5\cf2 \
        travel.\cf8 name\cf2  = \cf9 "Travel"\cf2 \
        travel.\cf8 isPermanent\cf2  = \cf5 false\cf2 \
        \
        \cf4 //travel.addItemsToList()\cf2 \
        \
        \cf5 let\cf2  documents = \cf8 List\cf2 (\cf8 context\cf2 : context)\
        documents.\cf8 listKey\cf2  = \cf10 6\cf2 \
        documents.\cf8 name\cf2  = \cf9 "Documents"\cf2 \
        documents.\cf8 isPermanent\cf2  = \cf5 false\cf2 \
        \
        \cf5 let\cf2  documentsItem = [\cf8 ListItem\cf2 (\cf8 context\cf2 : context), \cf8 ListItem\cf2 (\cf8 context\cf2 : context)]\
        documentsItem[\cf10 0\cf2 ].\cf8 itemKey\cf2  = \cf10 13\cf2 \
        documentsItem[\cf10 0\cf2 ].text = \cf9 "Secondary School Certificate"\cf2 \
        documentsItem[\cf10 0\cf2 ].done = \cf5 true\cf2 \
        \
        documentsItem[\cf10 1\cf2 ].\cf8 itemKey\cf2  = \cf10 14\cf2 \
        documentsItem[\cf10 1\cf2 ].text = \cf9 "Passport"\cf2 \
        documentsItem[\cf10 1\cf2 ].done = \cf5 false\cf2 \
        \
        documents.\cf8 addItemsToList\cf2 (\cf8 listItems\cf2 : documentsItem)\
        \
       \cf5 let\cf2  mygroup = \cf8 Group\cf2 (\cf8 context\cf2 : context)\
        mygroup.\cf8 groupKey\cf2  = \cf10 0\cf2 \
        mygroup.\cf8 name\cf2  = \cf9 "Academics"\cf2 \
        \
        mygroup.\cf8 addToLists\cf2 (documents)\
        \
        \
        \cf5 do\cf2 \
        \{\
            \cf5 try\cf2  \cf5 self\cf2 .\cf8 context\cf2 .\cf7 save\cf2 ()\
            \cf7 print\cf2 (\cf9 "Saved Successfully"\cf2 )\
        \}\
        \cf5 catch\cf2 \{\
            \cf7 print\cf2 (\cf9 "Save Failed"\cf2 )\
        \}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \
\
\pard\tx543\pardeftab543\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \
        }